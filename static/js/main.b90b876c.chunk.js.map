{"version":3,"sources":["components/Section/Section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/StatisticItem.js","components/Statistics/index.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","index","type","button","name","onClick","StatisticsItem","label","value","propTypes","PropTypes","string","isRequired","number","Statistics","props","total","positivePercentage","statisticsList","Object","entries","key","statisticsItem","Notification","message","prototype","Proptypes","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","target","setState","prevState","getVisibleContacts","this","keys","percentage","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90b876c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__14hfA\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={style.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={style.buttonList}>\r\n    {options.map((option, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          className={style.button}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatisticsItem = ({ label, value }) => {\r\n  return (\r\n    <>\r\n      {label}: {value}\r\n    </>\r\n  );\r\n};\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsItem;","import React from 'react';\r\nimport style from './Statistics.module.css';\r\nimport StatisticsItem from './StatisticItem';\r\n\r\nconst Statistics = ({ props, total, positivePercentage }) => (\r\n  <ul className={style.statisticsList}>\r\n    {Object.entries(props).map(([key, value], index) => {\r\n      return (\r\n        <li key={index} className={style.statisticsItem}>\r\n          <StatisticsItem label={key} value={value} />\r\n        </li>\r\n      );\r\n    })}\r\n    <li className={style.statisticsItem}>total: {total}</li>\r\n    <li className={style.statisticsItem}>\r\n      positivePercentage: {positivePercentage}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.prototype = {\r\n  message: Proptypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, {Component} from 'react';\nimport './App.css';\nimport Section from './components/Section/';\nimport FeedbackOptions from './components/FeedbackOptions/';\nimport Statistics from './components/Statistics/';\nimport Notification from './components/Notification/';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n   state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n   };\n  \n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    let positivePercentage;\n\n    if (good > 0) {\n      positivePercentage = (good / total) * 100;\n    } else positivePercentage = 0;\n\n    return Math.round(positivePercentage);\n  };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  getVisibleContacts = () => {\n    return this.state;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const options = Object.keys(this.state);\n    const percentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              props={this.state}\n              total={total}\n              positivePercentage={percentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2Wk7h\",\"statisticsItem\":\"Statistics_statisticsItem__31dmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2pWJE\",\"buttonList\":\"FeedbackOptions_buttonList__2-_y2\"};"],"sourceRoot":""}